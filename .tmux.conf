# set C-s as prefix
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# bind r to reload tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

# statusbar config
set -g status-bg default
set -g status-fg colour2
set -g status-left-length 50

# bind - to split window vertically and \ to split horizontally
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h

# bind C-[arrow] to resize panes
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# define 1 as windows index (0 is too far)
set -g base-index 1
set -g renumber-windows on

# create a window with current pane
bind-key b break-pane -d

# create a pane from given window
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# bind C-j to select sessions
bind-key C-j choose-tree

# set vi mode to working with buffers
setw -g mode-keys vi

# bind vi like keys to copy
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip -i -selection clipboard"

# configure vim seamless integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# bind t to todo-list
bind-key t split-window -h "vim ~/todo.md"

# bind C-b to create another tmux session with the current dir with dir name
bind-key C-b send-keys 'tat && exit' 'C-m'

# bind K to kill current session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
